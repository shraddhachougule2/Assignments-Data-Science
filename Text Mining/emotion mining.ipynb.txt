{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "c88ccb05",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Collecting text2emotion\n",
      "  Downloading text2emotion-0.0.5-py3-none-any.whl (57 kB)\n",
      "Collecting emoji>=0.6.0\n",
      "  Downloading emoji-1.7.0.tar.gz (175 kB)\n",
      "Requirement already satisfied: nltk in c:\\users\\way tomorrow\\anaconda3\\lib\\site-packages (from text2emotion) (3.6.5)\n",
      "Requirement already satisfied: click in c:\\users\\way tomorrow\\anaconda3\\lib\\site-packages (from nltk->text2emotion) (8.0.3)\n",
      "Requirement already satisfied: joblib in c:\\users\\way tomorrow\\anaconda3\\lib\\site-packages (from nltk->text2emotion) (1.0.1)\n",
      "Requirement already satisfied: regex>=2021.8.3 in c:\\users\\way tomorrow\\anaconda3\\lib\\site-packages (from nltk->text2emotion) (2021.8.3)\n",
      "Requirement already satisfied: tqdm in c:\\users\\way tomorrow\\anaconda3\\lib\\site-packages (from nltk->text2emotion) (4.62.3)\n",
      "Requirement already satisfied: colorama in c:\\users\\way tomorrow\\anaconda3\\lib\\site-packages (from click->nltk->text2emotion) (0.4.4)\n",
      "Building wheels for collected packages: emoji\n",
      "  Building wheel for emoji (setup.py): started\n",
      "  Building wheel for emoji (setup.py): finished with status 'done'\n",
      "  Created wheel for emoji: filename=emoji-1.7.0-py3-none-any.whl size=171047 sha256=46bbf28a499b7755b370fe858b36ca4068c4e2a48c05c7b29eb7f37c42e0d7f1\n",
      "  Stored in directory: c:\\users\\way tomorrow\\appdata\\local\\pip\\cache\\wheels\\fa\\7a\\e9\\22dd0515e1bad255e51663ee513a2fa839c95934c5fc301090\n",
      "Successfully built emoji\n",
      "Installing collected packages: emoji, text2emotion\n",
      "Successfully installed emoji-1.7.0 text2emotion-0.0.5\n"
     ]
    }
   ],
   "source": [
    "#Install package using pip\n",
    "!pip install text2emotion"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "70f9c9ae",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Import the modules\n",
    "import text2emotion as te"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "23aaf098",
   "metadata": {},
   "outputs": [],
   "source": [
    "text = \"I was asked to sign a third party contract a week out from stay. If it wasn't an 8 person group that took a lot of wrangling I would have cancelled the booking straight away. Bathrooms - there are no stand alone bathrooms. Please consider this - you have to clear out the main bedroom to use that bathroom. Other option is you walk through a different bedroom to get to its en-suite. Signs all over the apartment - there are signs everywhere - some helpful - some telling you rules. Perhaps some people like this but It negatively affected our enjoyment of the accommodation. Stairs - lots of them - some had slightly bending wood which caused a minor injury.\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "b40ed9bc",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'Happy': 0.04, 'Angry': 0.12, 'Surprise': 0.08, 'Sad': 0.33, 'Fear': 0.42}"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Call to the function\n",
    "te.get_emotion(text)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "079948cb",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'Happy': 1.0, 'Angry': 0.0, 'Surprise': 0.0, 'Sad': 0.0, 'Fear': 0.0}"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "text = \"Day was pretty amazingüòÉüòÉ\"\n",
    "te.get_emotion(text)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "d436a125",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'Happy': 0.33, 'Angry': 0.0, 'Surprise': 0.0, 'Sad': 0.0, 'Fear': 0.67}"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "text = \"Hello there üëã I hope you are getting knowledge from my articles. If you would like to support me, feel free to buy me some coffee üôè‚òï\"\n",
    "te.get_emotion(text)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "f07d2097",
   "metadata": {},
   "outputs": [],
   "source": [
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "2c61f97c",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "ERROR: Could not find a version that satisfies the requirement standford (from versions: none)\n",
      "ERROR: No matching distribution found for standford\n"
     ]
    }
   ],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "7c912c4d",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "58490b18",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "b9079002",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
